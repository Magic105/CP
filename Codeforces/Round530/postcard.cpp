/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Gaurav Tiwari
 */



#include <bits/stdc++.h>
#define mod 1000000007ll
#define mod2 100000009ll
#define mod3 998244353
#define pb push_back
#define fastIO ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
#define readi(x) scanf("%d",&x)
#define reads(x)  scanf("%s", x)
#define readl(x) scanf("%I64d",&x)
#define PI 3.141592653589793238462643383
#define repi(i,a,b) for(int i=a;i<=b;i++)
#define repd(i,a,b) for(int i=a;i>=b;i--)
#define mp make_pair
#define ll long long
#define sorti(a,b) sort(a,b)
#define sortd(a,b,tp) sort(a,b,greater<tp>())
#define fi first
#define se second
using namespace std;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef pair<long double,long double>pdd;
template<class T>
using max_pq = priority_queue<T>;
template<class T>
using min_pq = priority_queue<T,vector<T>,greater<T>>;

class CPostcard {
public:
	void solve(std::istream& cin, std::ostream& cout) {
		string str;
		cin>>str;
		int n,snow=0,candy=0,letters=0;
		cin>>n;
		for(int i=0;i<str.size();i++)
        {
		    if(str[i]=='*')
		        snow++;
		    else if(str[i]=='?')
		        candy++;
		    else
		        letters++;
        }
		if(letters==n)
        {
		    for(int i=0;i<str.size();i++)
            {
		        if(str[i]!='*' && str[i]!='?')
                {
		            cout<<str[i];
                }
            }
        }
		else if (letters<n)
        {
            if(snow==0)
            {
                cout<<"Impossible";
                return;
            }
            int flag=0,left=n-letters;
            for(int i=0;i<str.length();i++)
            {
                if(str[i]=='*' && !flag)
                {
                    flag=1;
                    for(int j=0;j<left;j++)
                    {
                        cout<<str[i-1];
                    }
                }
                else if(str[i]!='?' && str[i]!='*')
                {
                    cout<<str[i];
                }
            }
        }
		else{
            int left=letters-n;
            if((candy+snow)<left)
            {
                cout<<"Impossible";
                return;
            }
            int i;
            for(i=1;i<str.length();i++)
            {
                if((str[i]=='?' || str[i]=='*' ) && left>0 )
                {
                    left--;
                }
                else
                {
                    if(str[i-1]!='?' && str[i-1]!='*')
                        cout<<str[i-1];
                }
            }
            if(str[i-1]!='?' && str[i-1]!='*')
                cout<<str[i-1];

		}
	}

};


int main() {
    ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
	CPostcard solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
