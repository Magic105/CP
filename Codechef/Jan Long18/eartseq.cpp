/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Gaurav Tiwari
 */



#include <bits/stdc++.h>
#define mod 1000000007ll
#define mod2 100000009ll
#define mod3 998244353
#define pb push_back
#define fastIO ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
#define readi(x) scanf("%d",&x)
#define reads(x)  scanf("%s", x)
#define readl(x) scanf("%I64d",&x)
#define PI 3.141592653589793238462643383
#define repi(i,a,b) for(int i=a;i<b;i++)
#define repd(i,a,b) for(int i=a;i>b;i--)
#define mp make_pair
#define ll long long
#define sorti(a,b) sort(a,b)
#define sortd(a,b,tp) sort(a,b,greater<tp>())
#define fi first
#define se second
using namespace std;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef pair<long double,long double>pdd;
template<class T>
using max_pq = priority_queue<T>;
template<class T>
using min_pq = priority_queue<T,vector<T>,greater<T>>;
const int MAX_SIZE = 1000001;
vector<int >isprime(MAX_SIZE , true);
vector<int >prime;
vector<int >SPF(MAX_SIZE);

class YetAnotherProblemAboutSequences {
public:
	void solve(std::istream& cin, std::ostream& cout) {
		int N=1000000;
        for (long long int i=2; i<N ; i++)
        {
            if (isprime[i])
            {
                prime.push_back(i);
                SPF[i] = i;
            }

            for (long long int j=0;j < (int)prime.size() && i*prime[j] < N && prime[j] <= SPF[i];j++)
            {
                isprime[i*prime[j]]=false;

                // put smallest prime factor of i*prime[j]
                SPF[i*prime[j]] = prime[j] ;
            }
        }
        /////
        int bases[]= {5,7,11};
        int t;
        cin>>t;
        vector<int> ans;
        while(t--)
        {
            ans.clear();
            int n;
            cin>>n;
            ans.pb(6);
            ans.pb(39);

            int b=5,a=0,i;
            for(i=3;i<n;i++)
            {
                long tmp=(long)prime[b]*(long)bases[a];
                if(tmp>1000000000 || tmp<=0) {
                    cout<<"FUCKKKK: "<<n<<" "<<a<<" "<<i<<"\n";
                    assert(tmp<=1000000000 && tmp>0);
                    return;
                }
                ans.pb((int)tmp);
                if(i%2==1)
                    b++;
                else
                    a=(a+1)%3;
            }
            if(i%2==0)
                ans.pb(2*bases[a]);
            else
                ans.pb(2*prime[b]);

            for(i=0;i<n;i++)
            {
                if(i!=0) cout<<" ";
                cout<<ans[i];
            }
            cout<<"\n";
        }

    }
};


int main() {
    ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
	YetAnotherProblemAboutSequences solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
